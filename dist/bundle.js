(()=>{var t={208:(t,n,e)=>{"use strict";e.d(n,{A:()=>p});var o=e(354),r=e.n(o),i=e(314),s=e.n(i),a=e(417),l=e.n(a),c=new URL(e(456),e.b),A=s()(r());A.push([t.id,"@import url(https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap);"]);var d=l()(c);A.push([t.id,`@font-face {\n  font-family: Astronomus;\n  src: url(${d});\n}\n\n* {\n  font-family: "Poppins", sans-serif;\n  color: #333;\n}\n.board-container {\n  display: flex;\n  justify-content: space-around;\n  margin-top: 20px;\n}\n.board {\n  border-collapse: collapse;\n}\n\n.cell {\n  width: 40px;\n  height: 40px;\n  border: 1px solid #333;\n  font-size: 20px;\n  cursor: pointer;\n}\n\n/* .cell:hover {\n  background-color: #eee;\n} */\n.ship {\n  background-color: rgba(45, 199, 255, 0.62);\n}\n\n.ship-position-prohibited {\n  background-color: rgba(255, 60, 60, 0.62);\n}\n.ship-position-allowed {\n  background-color: rgba(61, 255, 90, 0.62);\n}\n/* Missed cell */\n.missed {\n  position: relative;\n  background-color: #ebebeb;\n}\n\n.missed::after {\n  content: "";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 8px;\n  height: 8px;\n  background-color: #343434; /* Color of the dot */\n  border-radius: 50%; /* Make it a circle */\n}\n\n/* Hit cell */\n.hit {\n  position: relative;\n  background-color: #ffe4df;\n}\n\n.hit::before,\n.hit::after {\n  content: "";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 12px;\n  height: 2px;\n  background-color: #f34628; /* Color of the cross */\n}\n\n.hit::before {\n  transform: translate(-50%, -50%) rotate(45deg);\n}\n\n.hit::after {\n  transform: translate(-50%, -50%) rotate(-45deg);\n}\nheader h1 {\n  margin: 20px;\n  font-size: 60px;\n  font-family: Astronomus;\n  text-transform: uppercase;\n}\na {\n  margin-left: 5px;\n  color: black;\n}\ni {\n  font-size: 55px;\n}\n\n/* BOX DIALOG */\n\n/*   Open state of the dialog  */\ndialog[open] {\n  opacity: 1;\n  transform: scaleY(1);\n}\n\n/*   Closed state of the dialog   */\ndialog {\n  opacity: 0;\n  transform: scaleY(0);\n  transition: opacity 0.7s ease-out, transform 0.7s ease-out,\n    overlay 0.7s ease-out allow-discrete, display 0.7s ease-out allow-discrete;\n  /* Equivalent to\n  transition: all 0.7s allow-discrete; */\n}\n\n/*   Before-open state  */\n/* Needs to be after the previous dialog[open] rule to take effect,\n    as the specificity is the same */\n@starting-style {\n  dialog[open] {\n    opacity: 0;\n    transform: scaleY(0);\n  }\n}\n\n/* Transition the :backdrop when the dialog modal is promoted to the top layer */\ndialog::backdrop {\n  background-color: rgb(0 0 0 / 0%);\n  transition: display 0.7s allow-discrete, overlay 0.7s allow-discrete,\n    background-color 0.7s;\n  /* Equivalent to\n  transition: all 0.7s allow-discrete; */\n}\n\ndialog[open]::backdrop {\n  background-color: rgb(0 0 0 / 25%);\n}\n\n/* This starting-style rule cannot be nested inside the above selector\nbecause the nesting selector cannot represent pseudo-elements. */\n\n@starting-style {\n  dialog[open]::backdrop {\n    background-color: rgb(0 0 0 / 0%);\n  }\n}\n\nul {\n  list-style-type: none;\n  display: flex;\n  justify-content: space-around;\n}\n\nli {\n  display: flex;\n  align-items: center;\n}\nbutton.close,\nbutton.replay {\n  margin-left: 600px;\n  padding: 5px 10px;\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n  border-radius: 3px;\n  font-weight: bold;\n  transition: 1000ms;\n}\n\nbutton.replay {\n  margin-left: 250px;\n}\n\nbutton.close,\nbutton.replay:hover {\n  color: white;\n  background-color: black;\n}\n#gameOverDialog h1 {\n  text-align: center;\n  font-family: Astronomus;\n}\nfooter p,\nfooter a {\n  text-align: center;\n  font-weight: bold;\n  font-size: 20px;\n  color: #ebebeb;\n}\nfooter {\n  margin-top: 70px;\n  padding: 30px 0px;\n  background-color: #333;\n}\n.red-heart {\n  color: red; /* Change the color */\n  font-size: 30px; /* Change the size */\n}\nbody {\n  margin: 0;\n}\n\n.box-title {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(1, 1fr) repeat(1, 2fr);\n}\n\n.title {\n  text-align: center;\n  font-size: 35px;\n  font-weight: bold;\n}\n\n.box-description {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n#ship-direction {\n  color: rgb(2, 209, 255);\n  background-color: white;\n  border: 1px solid rgb(2, 209, 255);\n  cursor: pointer;\n  margin-right: 10px;\n  border-radius: 3px;\n  font-weight: bold;\n  transition: 500ms;\n}\n\n#ship-direction:hover {\n  color: white;\n  background-color: rgb(2, 209, 255);\n}\nh3 {\n  text-align: center;\n  margin: 10px;\n}\n\n.ship-remaining-player,\n.ship-remaining-computer {\n  margin: auto;\n  width: fit-content;\n  background-color: rgb(0, 128, 202);\n  color: white;\n  padding: 5px 10px;\n}\n\n.red-background {\n  background-color: #f34628;\n}\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,uBAAuB;EACvB,4CAA8B;AAChC;;AAEA;EACE,kCAAkC;EAClC,WAAW;AACb;AACA;EACE,aAAa;EACb,6BAA6B;EAC7B,gBAAgB;AAClB;AACA;EACE,yBAAyB;AAC3B;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,sBAAsB;EACtB,eAAe;EACf,eAAe;AACjB;;AAEA;;GAEG;AACH;EACE,0CAA0C;AAC5C;;AAEA;EACE,yCAAyC;AAC3C;AACA;EACE,yCAAyC;AAC3C;AACA,gBAAgB;AAChB;EACE,kBAAkB;EAClB,yBAAyB;AAC3B;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,UAAU;EACV,WAAW;EACX,yBAAyB,EAAE,qBAAqB;EAChD,kBAAkB,EAAE,qBAAqB;AAC3C;;AAEA,aAAa;AACb;EACE,kBAAkB;EAClB,yBAAyB;AAC3B;;AAEA;;EAEE,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,WAAW;EACX,WAAW;EACX,yBAAyB,EAAE,uBAAuB;AACpD;;AAEA;EACE,8CAA8C;AAChD;;AAEA;EACE,+CAA+C;AACjD;AACA;EACE,YAAY;EACZ,eAAe;EACf,uBAAuB;EACvB,yBAAyB;AAC3B;AACA;EACE,gBAAgB;EAChB,YAAY;AACd;AACA;EACE,eAAe;AACjB;;AAEA,eAAe;;AAEf,gCAAgC;AAChC;EACE,UAAU;EACV,oBAAoB;AACtB;;AAEA,mCAAmC;AACnC;EACE,UAAU;EACV,oBAAoB;EACpB;8EAC4E;EAC5E;wCACsC;AACxC;;AAEA,yBAAyB;AACzB;oCACoC;AACpC;EACE;IACE,UAAU;IACV,oBAAoB;EACtB;AACF;;AAEA,gFAAgF;AAChF;EACE,iCAAiC;EACjC;yBACuB;EACvB;wCACsC;AACxC;;AAEA;EACE,kCAAkC;AACpC;;AAEA;gEACgE;;AAEhE;EACE;IACE,iCAAiC;EACnC;AACF;;AAEA;EACE,qBAAqB;EACrB,aAAa;EACb,6BAA6B;AAC/B;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;AACA;;EAEE,kBAAkB;EAClB,iBAAiB;EACjB,uBAAuB;EACvB,YAAY;EACZ,uBAAuB;EACvB,kBAAkB;EAClB,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE,YAAY;EACZ,uBAAuB;AACzB;AACA;EACE,kBAAkB;EAClB,uBAAuB;AACzB;AACA;;EAEE,kBAAkB;EAClB,iBAAiB;EACjB,eAAe;EACf,cAAc;AAChB;AACA;EACE,gBAAgB;EAChB,iBAAiB;EACjB,sBAAsB;AACxB;AACA;EACE,UAAU,EAAE,qBAAqB;EACjC,eAAe,EAAE,oBAAoB;AACvC;AACA;EACE,SAAS;AACX;;AAEA;EACE,aAAa;EACb,qCAAqC;EACrC,iDAAiD;AACnD;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;AACA;EACE,uBAAuB;EACvB,uBAAuB;EACvB,kCAAkC;EAClC,eAAe;EACf,kBAAkB;EAClB,kBAAkB;EAClB,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,kCAAkC;AACpC;AACA;EACE,kBAAkB;EAClB,YAAY;AACd;;AAEA;;EAEE,YAAY;EACZ,kBAAkB;EAClB,kCAAkC;EAClC,YAAY;EACZ,iBAAiB;AACnB;;AAEA;EACE,yBAAyB;AAC3B",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");\n\n@font-face {\n  font-family: Astronomus;\n  src: url(fonts/Astronomus.ttf);\n}\n\n* {\n  font-family: "Poppins", sans-serif;\n  color: #333;\n}\n.board-container {\n  display: flex;\n  justify-content: space-around;\n  margin-top: 20px;\n}\n.board {\n  border-collapse: collapse;\n}\n\n.cell {\n  width: 40px;\n  height: 40px;\n  border: 1px solid #333;\n  font-size: 20px;\n  cursor: pointer;\n}\n\n/* .cell:hover {\n  background-color: #eee;\n} */\n.ship {\n  background-color: rgba(45, 199, 255, 0.62);\n}\n\n.ship-position-prohibited {\n  background-color: rgba(255, 60, 60, 0.62);\n}\n.ship-position-allowed {\n  background-color: rgba(61, 255, 90, 0.62);\n}\n/* Missed cell */\n.missed {\n  position: relative;\n  background-color: #ebebeb;\n}\n\n.missed::after {\n  content: "";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 8px;\n  height: 8px;\n  background-color: #343434; /* Color of the dot */\n  border-radius: 50%; /* Make it a circle */\n}\n\n/* Hit cell */\n.hit {\n  position: relative;\n  background-color: #ffe4df;\n}\n\n.hit::before,\n.hit::after {\n  content: "";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 12px;\n  height: 2px;\n  background-color: #f34628; /* Color of the cross */\n}\n\n.hit::before {\n  transform: translate(-50%, -50%) rotate(45deg);\n}\n\n.hit::after {\n  transform: translate(-50%, -50%) rotate(-45deg);\n}\nheader h1 {\n  margin: 20px;\n  font-size: 60px;\n  font-family: Astronomus;\n  text-transform: uppercase;\n}\na {\n  margin-left: 5px;\n  color: black;\n}\ni {\n  font-size: 55px;\n}\n\n/* BOX DIALOG */\n\n/*   Open state of the dialog  */\ndialog[open] {\n  opacity: 1;\n  transform: scaleY(1);\n}\n\n/*   Closed state of the dialog   */\ndialog {\n  opacity: 0;\n  transform: scaleY(0);\n  transition: opacity 0.7s ease-out, transform 0.7s ease-out,\n    overlay 0.7s ease-out allow-discrete, display 0.7s ease-out allow-discrete;\n  /* Equivalent to\n  transition: all 0.7s allow-discrete; */\n}\n\n/*   Before-open state  */\n/* Needs to be after the previous dialog[open] rule to take effect,\n    as the specificity is the same */\n@starting-style {\n  dialog[open] {\n    opacity: 0;\n    transform: scaleY(0);\n  }\n}\n\n/* Transition the :backdrop when the dialog modal is promoted to the top layer */\ndialog::backdrop {\n  background-color: rgb(0 0 0 / 0%);\n  transition: display 0.7s allow-discrete, overlay 0.7s allow-discrete,\n    background-color 0.7s;\n  /* Equivalent to\n  transition: all 0.7s allow-discrete; */\n}\n\ndialog[open]::backdrop {\n  background-color: rgb(0 0 0 / 25%);\n}\n\n/* This starting-style rule cannot be nested inside the above selector\nbecause the nesting selector cannot represent pseudo-elements. */\n\n@starting-style {\n  dialog[open]::backdrop {\n    background-color: rgb(0 0 0 / 0%);\n  }\n}\n\nul {\n  list-style-type: none;\n  display: flex;\n  justify-content: space-around;\n}\n\nli {\n  display: flex;\n  align-items: center;\n}\nbutton.close,\nbutton.replay {\n  margin-left: 600px;\n  padding: 5px 10px;\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n  border-radius: 3px;\n  font-weight: bold;\n  transition: 1000ms;\n}\n\nbutton.replay {\n  margin-left: 250px;\n}\n\nbutton.close,\nbutton.replay:hover {\n  color: white;\n  background-color: black;\n}\n#gameOverDialog h1 {\n  text-align: center;\n  font-family: Astronomus;\n}\nfooter p,\nfooter a {\n  text-align: center;\n  font-weight: bold;\n  font-size: 20px;\n  color: #ebebeb;\n}\nfooter {\n  margin-top: 70px;\n  padding: 30px 0px;\n  background-color: #333;\n}\n.red-heart {\n  color: red; /* Change the color */\n  font-size: 30px; /* Change the size */\n}\nbody {\n  margin: 0;\n}\n\n.box-title {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(1, 1fr) repeat(1, 2fr);\n}\n\n.title {\n  text-align: center;\n  font-size: 35px;\n  font-weight: bold;\n}\n\n.box-description {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n#ship-direction {\n  color: rgb(2, 209, 255);\n  background-color: white;\n  border: 1px solid rgb(2, 209, 255);\n  cursor: pointer;\n  margin-right: 10px;\n  border-radius: 3px;\n  font-weight: bold;\n  transition: 500ms;\n}\n\n#ship-direction:hover {\n  color: white;\n  background-color: rgb(2, 209, 255);\n}\nh3 {\n  text-align: center;\n  margin: 10px;\n}\n\n.ship-remaining-player,\n.ship-remaining-computer {\n  margin: auto;\n  width: fit-content;\n  background-color: rgb(0, 128, 202);\n  color: white;\n  padding: 5px 10px;\n}\n\n.red-background {\n  background-color: #f34628;\n}\n'],sourceRoot:""}]);const p=A},314:t=>{"use strict";t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",o=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),o&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),o&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,o,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var s={};if(o)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(s[l]=!0)}for(var c=0;c<t.length;c++){var A=[].concat(t[c]);o&&s[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),e&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=e):A[2]=e),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),n.push(A))}},n}},417:t=>{"use strict";t.exports=function(t,n){return n||(n={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),n.hash&&(t+=n.hash),/["'() \t\n]|(%20)/.test(t)||n.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},354:t=>{"use strict";t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},206:(t,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>o});const o=e.p+"sounds/gameover.mp3"},949:(t,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>o});const o=e.p+"sounds/hit.mp3"},143:(t,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>o});const o=e.p+"sounds/incoming_missile.mp3"},411:(t,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>o});const o=e.p+"sounds/son1.mp3"},529:(t,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>o});const o=e.p+"sounds/son10.mp3"},132:(t,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>o});const o=e.p+"sounds/son2.mp3"},81:(t,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>o});const o=e.p+"sounds/son3.mp3"},730:(t,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>o});const o=e.p+"sounds/son4.mp3"},343:(t,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>o});const o=e.p+"sounds/son5.mp3"},616:(t,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>o});const o=e.p+"sounds/son6.mp3"},901:(t,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>o});const o=e.p+"sounds/son7.mp3"},742:(t,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>o});const o=e.p+"sounds/son8.mp3"},635:(t,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>o});const o=e.p+"sounds/son9.mp3"},72:t=>{"use strict";var n=[];function e(t){for(var e=-1,o=0;o<n.length;o++)if(n[o].identifier===t){e=o;break}return e}function o(t,o){for(var i={},s=[],a=0;a<t.length;a++){var l=t[a],c=o.base?l[0]+o.base:l[0],A=i[c]||0,d="".concat(c," ").concat(A);i[c]=A+1;var p=e(d),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var h=r(u,o);o.byIndex=a,n.splice(a,0,{identifier:d,updater:h,references:1})}s.push(d)}return s}function r(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,r){var i=o(t=t||[],r=r||{});return function(t){t=t||[];for(var s=0;s<i.length;s++){var a=e(i[s]);n[a].references--}for(var l=o(t,r),c=0;c<i.length;c++){var A=e(i[c]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}i=l}}},659:t=>{"use strict";var n={};t.exports=function(t,e){var o=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},540:t=>{"use strict";t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},56:(t,n,e)=>{"use strict";t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},825:t=>{"use strict";t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},113:t=>{"use strict";t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}},746:(t,n,e)=>{var o={"./gameover.mp3":206,"./hit.mp3":949,"./incoming_missile.mp3":143,"./son1.mp3":411,"./son10.mp3":529,"./son2.mp3":132,"./son3.mp3":81,"./son4.mp3":730,"./son5.mp3":343,"./son6.mp3":616,"./son7.mp3":901,"./son8.mp3":742,"./son9.mp3":635};function r(t){var n=i(t);return e(n)}function i(t){if(!e.o(o,t)){var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}return o[t]}r.keys=function(){return Object.keys(o)},r.resolve=i,t.exports=r,r.id=746},456:(t,n,e)=>{"use strict";t.exports=e.p+"0c25656528a0623c0f72.ttf"}},n={};function e(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return t[o](i,i.exports,e),i.exports}e.m=t,e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),e.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var o=n.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&(!t||!/^http(s?):/.test(t));)t=o[r--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{"use strict";const t=new Set,n=document.getElementById("gameOverDialog");class o{constructor(t=10){this.size=t,this.grid=Array.from({length:t},(()=>Array(t).fill(null))),this.ships=[],this.missedAttacks=[],this.shipsRemaining=6}placeShip(t,n,e){const o=[];let r=n,s=e;for(let a=0;a<t.length;a++){if(i(n,e))throw new Error("Ship placement out of bounds.");if(null!==this.grid[s][r])throw new Error("Another ship is already placed here.");if(o.push([r,s]),"horizontal"===t.direction)r++;else{if("vertical"!==t.direction)throw new Error('Invalid direction. Use "horizontal" or "vertical".');s++}}o.forEach((([n,e])=>{this.grid[e][n]=t})),this.ships.push({ship:t,shipPositions:o})}canThisShipBePlacedHere(t,n,e){let o=parseInt(e),r=parseInt(n);for(let n=0;n<t.length;n++){if(i(o,r))return console.log("Ship placement out of bounds."),!1;if(null!==this.grid[r][o])return console.log(`PosX: ${o}, ${r}`),console.log("Another ship is already placed here."),!1;if("horizontal"===t.direction)o++;else{if("vertical"!==t.direction)return console.log("Invalid direction. Use 'horizontal' or 'vertical'"),!1;r++}}return console.log("Ok"),!0}receiveAttack(t,n){if(t<0||t>=this.size||n<0||n>=this.size)throw new Error("Attack out of bounds.");const e=this.grid[n][t];return null===e?(this.missedAttacks.push([t,n]),"Miss!"):(e.hit(),`Hit on ${e.name}!`)}haveAllShipsBeenSunk(){return this.ships.map((t=>t.ship.isSunk)).every((t=>!0===t))}displayBoard(t){let n=0;this.grid.forEach((e=>{const o=document.createElement("tr");let r=0;e.forEach((t=>{const e=document.createElement("td");e.classList.add("cell"),e.setAttribute("data-x",r),e.setAttribute("data-y",n),r++,o.appendChild(e)})),n++,t.appendChild(o)}))}}class r extends o{constructor(){super(),this.countAttackReceived=0,this.chosenPairs=new Set}allowPlayerToAttackComputer(t,e,o){const r=Array.from(t.getElementsByClassName("cell")),i=t=>{this.countAttackReceived++;const r=t.target.getAttribute("data-x"),i=t.target.getAttribute("data-y");if(!this.chosenPairs.has(`${r}-${i}`)){if(function(){let t=Math.floor(10*Math.random())+1;new Audio(`sounds/son${t}.mp3`).play()}(),this.chosenPairs.add(`${r}-${i}`),"Miss!"==this.receiveAttack(r,i))t.target.classList.add("missed");else{if(t.target.classList.add("hit"),this.grid[i][r].isSunk){this.shipsRemaining--;const t=document.querySelector(".ship-remaining-computer");t.textContent=`Ships remaining: ${this.shipsRemaining}`,t.classList.add("red-background"),setTimeout((()=>{t.classList.remove("red-background")}),3e3)}if(this.haveAllShipsBeenSunk())return a(),n.querySelector("h2").textContent="Congratulations, you Win!!!",void n.showModal()}this.countAttackReceived%5==0&&new Audio("sounds/incoming_missile.mp3").play(),this.attackPlayerBoard(e,o)}};r.forEach((t=>{t.addEventListener("click",i)}))}attackPlayerBoard(e,o){setTimeout((()=>{const[r,i]=function(){let n,e;do{n=Math.floor(10*Math.random()),e=Math.floor(10*Math.random())}while(t.has(`${n}-${e}`));return t.add(`${n}-${e}`),[n,e]}();if("Miss!"==e.receiveAttack(r,i))o.querySelector(`td[data-x="${r}"][data-y="${i}"]`).classList.add("missed");else{if(e.grid[i][r].isSunk){e.shipsRemaining--;const t=document.querySelector(".ship-remaining-player");t.textContent=`Ships remaining: ${e.shipsRemaining}`,t.classList.add("red-background"),setTimeout((()=>{t.classList.remove("red-background")}),3e3)}o.querySelector(`td[data-x="${r}"][data-y="${i}"]`).classList.add("hit"),new Audio("sounds/hit.mp3").play()}e.haveAllShipsBeenSunk()&&(n.querySelector("h2").textContent="Sorry, you lose!!!",n.showModal(),a())}),1500)}}function i(t,n){return!(s(10).includes(parseInt(t))&&s(10).includes(parseInt(n)))}function s(t){var n=[];for(let e=0;e<t;e++)n.push(e);return n}function a(){new Audio("sounds/gameover.mp3").play()}class l{constructor(t,n,e="horizontal"){this.name=t,this.hits=0,this.length=n,this.direction=e,this.isSunk=!1}hit(){this.hits++,this.hits===this.length&&(this.isSunk=!0)}}class c{constructor(){this.shipDirectionButton=document.getElementById("ship-direction"),this.allPlayerShips=[],this.playerBoard=new o,this.computerBoard=new r,this.playerBoardDOM=document.getElementById("player-board"),this.computerBoardDOM=document.getElementById("computer-board"),this.currentPlayer="player",this.playerShipNamesAndLength=[["Battleship",5],["Kraken",4],["Bull Dog",3],["Titan",2],["Warrior",2],["Tiki",1]]}setUpBoards(){this.playerBoard.displayBoard(this.playerBoardDOM),this.computerBoard.displayBoard(this.computerBoardDOM),this.startPlaceShipProcess()}startPlaceShipProcess(){const t=this.playerBoardDOM.querySelectorAll(".cell");for(const n of t)this.addMouseOverEffectOn(n),this.addMouseOutEffectOn(n),this.addClickEffectOn(n)}addMouseOverEffectOn(t){t.addEventListener("mouseover",(()=>{if(this.playerShipNamesAndLength.length>0){const n=t.getAttribute("data-x"),e=t.getAttribute("data-y"),o=this.playerShipNamesAndLength[0];console.log(o);const r=new l(...o);if(r.direction=this.shipDirectionButton.textContent,this.playerBoard.canThisShipBePlacedHere(r,e,n)){let t=parseInt(n),o=parseInt(e);for(let n=0;n<r.length;n++)this.playerBoardDOM.querySelector(`td[data-x="${t}"][data-y="${o}"]`).classList.add("ship-position-allowed"),"horizontal"===r.direction?t++:o++}else{let t=parseInt(n),o=parseInt(e);for(let n=0;n<r.length;n++)this.playerBoardDOM.querySelector(`td[data-x="${t}"][data-y="${o}"]`).classList.add("ship-position-prohibited"),"horizontal"===r.direction?t++:o++}}}))}addMouseOutEffectOn(t){t.addEventListener("mouseout",(()=>{if(this.playerShipNamesAndLength.length>0){const n=t.getAttribute("data-x"),e=t.getAttribute("data-y"),o=this.playerShipNamesAndLength[0];console.log(o);const r=new l(...o);if(r.direction=this.shipDirectionButton.textContent,this.playerBoard.canThisShipBePlacedHere(r,e,n)){let t=parseInt(n),o=parseInt(e);for(let n=0;n<r.length;n++)this.playerBoardDOM.querySelector(`td[data-x="${t}"][data-y="${o}"]`).classList.remove("ship-position-allowed"),"horizontal"===r.direction?t++:o++}else{let t=parseInt(n),o=parseInt(e);for(let n=0;n<r.length;n++)this.playerBoardDOM.querySelector(`td[data-x="${t}"][data-y="${o}"]`).classList.remove("ship-position-prohibited"),"horizontal"===r.direction?t++:o++}}}))}addClickEffectOn(t){t.addEventListener("click",(()=>{if(this.playerShipNamesAndLength.length>0){const n=t.getAttribute("data-x"),e=t.getAttribute("data-y");if(this.playerBoard.canThisShipBePlacedHere(new l(...this.playerShipNamesAndLength[0],this.shipDirectionButton.textContent),e,n)){const t=this.playerShipNamesAndLength.shift();console.log(t);const o=new l(...t);if(o.direction=this.shipDirectionButton.textContent,this.playerBoard.canThisShipBePlacedHere(o,e,n)){this.playerBoard.placeShip(o,n,e),document.getElementById("ship-left-to-place").textContent=`${this.playerShipNamesAndLength.length} ships left to place`;let t=parseInt(n),r=parseInt(e);for(let n=0;n<o.length;n++){const n=this.playerBoardDOM.querySelector(`td[data-x="${t}"][data-y="${r}"]`);if(n.classList.remove("ship-position-allowed"),n.classList.add("ship"),"horizontal"===o.direction?t++:r++,0==this.playerShipNamesAndLength.length){const t=document.querySelector(".player-label"),n=document.querySelector(".computer-label");t.textContent="",n.textContent="";const e=document.createElement("h3"),o=document.createElement("h3");e.textContent="The computer sinks 1 ship per turn",o.textContent="Click on this board to sink their ships!",t.appendChild(e),n.appendChild(o);const r=document.createElement("div"),i=document.createElement("div");r.classList.add("ship-remaining-player"),i.classList.add("ship-remaining-computer"),r.textContent="Ships remaining 6",i.textContent="Ships remaining 6",t.appendChild(r),n.appendChild(i),this.startGame()}}}}}}))}startGame(){const t=new l("Buto",3,"vertical");new l("But",2,"horizontal"),this.computerBoard.placeShip(t,0,0),this.computerBoard.allowPlayerToAttackComputer(this.computerBoardDOM,this.playerBoard,this.playerBoardDOM)}}var A=e(72),d=e.n(A),p=e(825),u=e.n(p),h=e(659),f=e.n(h),g=e(56),C=e.n(g),m=e(540),E=e.n(m),B=e(113),y=e.n(B),b=e(208),x={};x.styleTagTransform=y(),x.setAttributes=C(),x.insert=f().bind(null,"head"),x.domAPI=u(),x.insertStyleElement=E(),d()(b.A,x),b.A&&b.A.locals&&b.A.locals,e(746);const k=document.getElementById("dialog"),v=document.querySelector(".close"),w=document.querySelector(".replay"),S=document.getElementById("gameOverDialog"),M=document.getElementById("player-board"),L=document.getElementById("computer-board"),O=document.querySelector(".player-label"),I=document.querySelector(".computer-label");function z(){S.close(),M.textContent="",L.textContent="",O.textContent="",I.textContent="";const t=document.createElement("h3");t.textContent="Place your pieces";const n=document.createElement("div");n.classList.add("box-description");const e=document.createElement("button");e.setAttribute("id","ship-direction"),e.textContent="horizontal";const o=document.createElement("p");o.setAttribute("id","ship-left-to-place"),o.textContent="6 ships left to place",n.appendChild(e),n.appendChild(o),O.appendChild(t),O.appendChild(n);const r=document.createElement("h3");r.textContent="Waiting...";const i=document.createElement("div");i.classList.add("box-description");const s=document.createElement("p");s.textContent="Waiting for you to place your ships",i.appendChild(s),I.appendChild(r),I.appendChild(i),(new c).setUpBoards()}v.addEventListener("click",(()=>{k.close()})),w.addEventListener("click",z),k.showModal(),z();const D=document.getElementById("ship-direction");D.addEventListener("click",(()=>{"horizontal"==D.textContent?D.textContent="vertical":D.textContent="horizontal"}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,