(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>s});var o=t(354),r=t.n(o),i=t(314),a=t.n(i)()(r());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap);"]),a.push([n.id,'* {\n  font-family: "Poppins", sans-serif;\n}\n.board-container {\n  display: flex;\n  justify-content: space-around;\n  margin-top: 20px;\n}\n.board {\n  border-collapse: collapse;\n}\n\n.cell {\n  width: 40px;\n  height: 40px;\n  border: 1px solid #333;\n  font-size: 20px;\n  cursor: pointer;\n}\n\n/* .cell:hover {\n  background-color: #eee;\n} */\n.ship {\n  background-color: rgba(45, 199, 255, 0.62);\n}\n\n.ship-position-prohibited {\n  background-color: rgba(255, 60, 60, 0.62);\n}\n.ship-position-allowed {\n  background-color: rgba(61, 255, 90, 0.62);\n}\n/* Missed cell */\n.missed {\n  position: relative;\n  background-color: #ebebeb;\n}\n\n.missed::after {\n  content: "";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 8px;\n  height: 8px;\n  background-color: #343434; /* Color of the dot */\n  border-radius: 50%; /* Make it a circle */\n}\n\n/* Hit cell */\n.hit {\n  position: relative;\n  background-color: #ffe4df;\n}\n\n.hit::before,\n.hit::after {\n  content: "";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 12px;\n  height: 2px;\n  background-color: #f34628; /* Color of the cross */\n}\n\n.hit::before {\n  transform: translate(-50%, -50%) rotate(45deg);\n}\n\n.hit::after {\n  transform: translate(-50%, -50%) rotate(-45deg);\n}\nheader h1 {\n  margin: 30px;\n  font-size: 40px;\n  text-align: center;\n  text-transform: uppercase;\n}\na {\n  margin-left: 10px;\n  color: black;\n}\ni {\n  font-size: 45px;\n}\n/* BOX INFO */\n\n.box-info,\n.player-box,\n.computer-box {\n  margin: 20px;\n}\n.box-info {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n}\n\n.title {\n  text-align: center;\n  font-size: 35px;\n  font-weight: bold;\n}\n.state > p:first-child {\n  font-size: 20px;\n  text-align: center;\n  margin: 10px;\n  font-weight: 600;\n}\n\n.current-state {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n#ship-direction {\n  color: rgb(2, 209, 255);\n  background-color: white;\n  border: 1px solid rgb(2, 209, 255);\n  cursor: pointer;\n  margin-right: 10px;\n  border-radius: 3px;\n}\n\n/* BOX DIALOG */\n\n/*   Open state of the dialog  */\ndialog[open] {\n  opacity: 1;\n  transform: scaleY(1);\n}\n\n/*   Closed state of the dialog   */\ndialog {\n  opacity: 0;\n  transform: scaleY(0);\n  transition: opacity 0.7s ease-out, transform 0.7s ease-out,\n    overlay 0.7s ease-out allow-discrete, display 0.7s ease-out allow-discrete;\n  /* Equivalent to\n  transition: all 0.7s allow-discrete; */\n}\n\n/*   Before-open state  */\n/* Needs to be after the previous dialog[open] rule to take effect,\n    as the specificity is the same */\n@starting-style {\n  dialog[open] {\n    opacity: 0;\n    transform: scaleY(0);\n  }\n}\n\n/* Transition the :backdrop when the dialog modal is promoted to the top layer */\ndialog::backdrop {\n  background-color: rgb(0 0 0 / 0%);\n  transition: display 0.7s allow-discrete, overlay 0.7s allow-discrete,\n    background-color 0.7s;\n  /* Equivalent to\n  transition: all 0.7s allow-discrete; */\n}\n\ndialog[open]::backdrop {\n  background-color: rgb(0 0 0 / 25%);\n}\n\n/* This starting-style rule cannot be nested inside the above selector\nbecause the nesting selector cannot represent pseudo-elements. */\n\n@starting-style {\n  dialog[open]::backdrop {\n    background-color: rgb(0 0 0 / 0%);\n  }\n}\n\nul {\n  list-style-type: none;\n  display: flex;\n  justify-content: space-around;\n}\n\nli {\n  display: flex;\n  align-items: center;\n}\nbutton.close {\n  margin-left: 500px;\n  padding: 5px 10px;\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,kCAAkC;AACpC;AACA;EACE,aAAa;EACb,6BAA6B;EAC7B,gBAAgB;AAClB;AACA;EACE,yBAAyB;AAC3B;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,sBAAsB;EACtB,eAAe;EACf,eAAe;AACjB;;AAEA;;GAEG;AACH;EACE,0CAA0C;AAC5C;;AAEA;EACE,yCAAyC;AAC3C;AACA;EACE,yCAAyC;AAC3C;AACA,gBAAgB;AAChB;EACE,kBAAkB;EAClB,yBAAyB;AAC3B;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,UAAU;EACV,WAAW;EACX,yBAAyB,EAAE,qBAAqB;EAChD,kBAAkB,EAAE,qBAAqB;AAC3C;;AAEA,aAAa;AACb;EACE,kBAAkB;EAClB,yBAAyB;AAC3B;;AAEA;;EAEE,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,WAAW;EACX,WAAW;EACX,yBAAyB,EAAE,uBAAuB;AACpD;;AAEA;EACE,8CAA8C;AAChD;;AAEA;EACE,+CAA+C;AACjD;AACA;EACE,YAAY;EACZ,eAAe;EACf,kBAAkB;EAClB,yBAAyB;AAC3B;AACA;EACE,iBAAiB;EACjB,YAAY;AACd;AACA;EACE,eAAe;AACjB;AACA,aAAa;;AAEb;;;EAGE,YAAY;AACd;AACA;EACE,aAAa;EACb,qCAAqC;AACvC;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,iBAAiB;AACnB;AACA;EACE,eAAe;EACf,kBAAkB;EAClB,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,uBAAuB;EACvB,uBAAuB;EACvB,kCAAkC;EAClC,eAAe;EACf,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA,eAAe;;AAEf,gCAAgC;AAChC;EACE,UAAU;EACV,oBAAoB;AACtB;;AAEA,mCAAmC;AACnC;EACE,UAAU;EACV,oBAAoB;EACpB;8EAC4E;EAC5E;wCACsC;AACxC;;AAEA,yBAAyB;AACzB;oCACoC;AACpC;EACE;IACE,UAAU;IACV,oBAAoB;EACtB;AACF;;AAEA,gFAAgF;AAChF;EACE,iCAAiC;EACjC;yBACuB;EACvB;wCACsC;AACxC;;AAEA;EACE,kCAAkC;AACpC;;AAEA;gEACgE;;AAEhE;EACE;IACE,iCAAiC;EACnC;AACF;;AAEA;EACE,qBAAqB;EACrB,aAAa;EACb,6BAA6B;AAC/B;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;AACA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,uBAAuB;EACvB,YAAY;EACZ,uBAAuB;AACzB",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");\n\n* {\n  font-family: "Poppins", sans-serif;\n}\n.board-container {\n  display: flex;\n  justify-content: space-around;\n  margin-top: 20px;\n}\n.board {\n  border-collapse: collapse;\n}\n\n.cell {\n  width: 40px;\n  height: 40px;\n  border: 1px solid #333;\n  font-size: 20px;\n  cursor: pointer;\n}\n\n/* .cell:hover {\n  background-color: #eee;\n} */\n.ship {\n  background-color: rgba(45, 199, 255, 0.62);\n}\n\n.ship-position-prohibited {\n  background-color: rgba(255, 60, 60, 0.62);\n}\n.ship-position-allowed {\n  background-color: rgba(61, 255, 90, 0.62);\n}\n/* Missed cell */\n.missed {\n  position: relative;\n  background-color: #ebebeb;\n}\n\n.missed::after {\n  content: "";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 8px;\n  height: 8px;\n  background-color: #343434; /* Color of the dot */\n  border-radius: 50%; /* Make it a circle */\n}\n\n/* Hit cell */\n.hit {\n  position: relative;\n  background-color: #ffe4df;\n}\n\n.hit::before,\n.hit::after {\n  content: "";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 12px;\n  height: 2px;\n  background-color: #f34628; /* Color of the cross */\n}\n\n.hit::before {\n  transform: translate(-50%, -50%) rotate(45deg);\n}\n\n.hit::after {\n  transform: translate(-50%, -50%) rotate(-45deg);\n}\nheader h1 {\n  margin: 30px;\n  font-size: 40px;\n  text-align: center;\n  text-transform: uppercase;\n}\na {\n  margin-left: 10px;\n  color: black;\n}\ni {\n  font-size: 45px;\n}\n/* BOX INFO */\n\n.box-info,\n.player-box,\n.computer-box {\n  margin: 20px;\n}\n.box-info {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n}\n\n.title {\n  text-align: center;\n  font-size: 35px;\n  font-weight: bold;\n}\n.state > p:first-child {\n  font-size: 20px;\n  text-align: center;\n  margin: 10px;\n  font-weight: 600;\n}\n\n.current-state {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n#ship-direction {\n  color: rgb(2, 209, 255);\n  background-color: white;\n  border: 1px solid rgb(2, 209, 255);\n  cursor: pointer;\n  margin-right: 10px;\n  border-radius: 3px;\n}\n\n/* BOX DIALOG */\n\n/*   Open state of the dialog  */\ndialog[open] {\n  opacity: 1;\n  transform: scaleY(1);\n}\n\n/*   Closed state of the dialog   */\ndialog {\n  opacity: 0;\n  transform: scaleY(0);\n  transition: opacity 0.7s ease-out, transform 0.7s ease-out,\n    overlay 0.7s ease-out allow-discrete, display 0.7s ease-out allow-discrete;\n  /* Equivalent to\n  transition: all 0.7s allow-discrete; */\n}\n\n/*   Before-open state  */\n/* Needs to be after the previous dialog[open] rule to take effect,\n    as the specificity is the same */\n@starting-style {\n  dialog[open] {\n    opacity: 0;\n    transform: scaleY(0);\n  }\n}\n\n/* Transition the :backdrop when the dialog modal is promoted to the top layer */\ndialog::backdrop {\n  background-color: rgb(0 0 0 / 0%);\n  transition: display 0.7s allow-discrete, overlay 0.7s allow-discrete,\n    background-color 0.7s;\n  /* Equivalent to\n  transition: all 0.7s allow-discrete; */\n}\n\ndialog[open]::backdrop {\n  background-color: rgb(0 0 0 / 25%);\n}\n\n/* This starting-style rule cannot be nested inside the above selector\nbecause the nesting selector cannot represent pseudo-elements. */\n\n@starting-style {\n  dialog[open]::backdrop {\n    background-color: rgb(0 0 0 / 0%);\n  }\n}\n\nul {\n  list-style-type: none;\n  display: flex;\n  justify-content: space-around;\n}\n\nli {\n  display: flex;\n  align-items: center;\n}\nbutton.close {\n  margin-left: 500px;\n  padding: 5px 10px;\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n}\n'],sourceRoot:""}]);const s=a},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(a[l]=!0)}for(var A=0;A<n.length;A++){var c=[].concat(n[A]);o&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],s=0;s<n.length;s++){var l=n[s],A=o.base?l[0]+o.base:l[0],c=i[A]||0,d="".concat(A," ").concat(c);i[A]=c+1;var p=t(d),h={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)e[p].references++,e[p].updater(h);else{var u=r(h,o);o.byIndex=s,e.splice(s,0,{identifier:d,updater:u,references:1})}a.push(d)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=t(i[a]);e[s].references--}for(var l=o(n,r),A=0;A<i.length;A++){var c=t(i[A]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=l}}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{class n{constructor(n=10){this.size=n,this.grid=Array.from({length:n},(()=>Array(n).fill(null))),this.ships=[],this.missedAttacks=[]}placeShip(n,e,t){const r=[];let i=e,a=t;for(let s=0;s<n.length;s++){if(o(e,t))throw new Error("Ship placement out of bounds.");if(null!==this.grid[a][i])throw new Error("Another ship is already placed here.");if(r.push([i,a]),"horizontal"===n.direction)i++;else{if("vertical"!==n.direction)throw new Error('Invalid direction. Use "horizontal" or "vertical".');a++}}r.forEach((([e,t])=>{this.grid[t][e]=n})),this.ships.push({ship:n,shipPositions:r})}canThisShipBePlacedHere(n,e,t){let r=parseInt(t),i=parseInt(e);for(let e=0;e<n.length;e++){if(o(r,i))return console.log("Ship placement out of bounds."),!1;if(null!==this.grid[i][r])return console.log(`PosX: ${r}, ${i}`),console.log("Another ship is already placed here."),!1;if("horizontal"===n.direction)r++;else{if("vertical"!==n.direction)return console.log("Invalid direction. Use 'horizontal' or 'vertical'"),!1;i++}}return console.log("Ok"),!0}receiveAttack(n,e){if(n<0||n>=this.size||e<0||e>=this.size)throw new Error("Attack out of bounds.");const t=this.grid[e][n];return null===t?(this.missedAttacks.push([n,e]),"Miss!"):(t.hit(),`Hit on ${t.name}!`)}haveAllShipsBeenSunk(){return this.ships.map((n=>n.ship.isSunk)).every((n=>!0===n))}displayBoard(n){document.addEventListener("DOMContentLoaded",(()=>{let e=0;this.grid.forEach((t=>{const o=document.createElement("tr");let r=0;t.forEach((n=>{const t=document.createElement("td");t.classList.add("cell"),t.setAttribute("data-x",r),t.setAttribute("data-y",e),r++,o.appendChild(t)})),e++,n.appendChild(o)}))}))}}class e extends n{constructor(){super()}allowPlayerToAttackComputer(n){document.addEventListener("DOMContentLoaded",(()=>{Array.from(n.getElementsByClassName("cell")).forEach((n=>{n.addEventListener("click",(()=>{"Miss!"==this.receiveAttack(n.getAttribute("data-x"),n.getAttribute("data-y"))?n.classList.add("missed"):n.classList.add("hit")}))}))}))}}function o(n,e){return!(r(10).includes(parseInt(n))&&r(10).includes(parseInt(e)))}function r(n){var e=[];for(let t=0;t<n;t++)e.push(t);return e}class i{constructor(n,e,t="horizontal"){this.name=n,this.hits=0,this.length=e,this.direction=t,this.isSunk=!1}hit(){this.hits++,this.hits===this.length&&(this.isSunk=!0)}}var a=t(72),s=t.n(a),l=t(825),A=t.n(l),c=t(659),d=t.n(c),p=t(56),h=t.n(p),u=t(540),f=t.n(u),C=t(113),g=t.n(C),E=t(208),B={};B.styleTagTransform=g(),B.setAttributes=h(),B.insert=d().bind(null,"head"),B.domAPI=A(),B.insertStyleElement=f(),s()(E.A,B),E.A&&E.A.locals&&E.A.locals;const y=document.getElementById("dialog");document.querySelector(".close").addEventListener("click",(()=>{y.close()})),(new class{constructor(){this.shipDirectionButton=document.getElementById("ship-direction"),this.allPlayerShips=[],this.playerBoard=new n,this.computerBoard=new e,this.playerBoardDOM=document.getElementById("player-board"),this.computerBoardDOM=document.getElementById("computer-board"),this.playerShipNamesAndLength=[["Battleship",5],["Kraken",4],["Bull Dog",3],["Titan",2],["Warrior",2],["Tiki",1]]}setUpBoards(){this.playerBoard.displayBoard(this.playerBoardDOM),this.computerBoard.displayBoard(this.computerBoardDOM),this.startPlaceShipProcess()}startPlaceShipProcess(){document.addEventListener("DOMContentLoaded",(()=>{const n=this.playerBoardDOM.querySelectorAll(".cell");for(const e of n)this.addMouseOverEffectOn(e),this.addMouseOutEffectOn(e),this.addClickEffectOn(e)}))}addMouseOverEffectOn(n){n.addEventListener("mouseover",(()=>{if(this.playerShipNamesAndLength.length>0){const e=n.getAttribute("data-x"),t=n.getAttribute("data-y"),o=this.playerShipNamesAndLength[0];console.log(o);const r=new i(...o);if(r.direction=this.shipDirectionButton.textContent,this.playerBoard.canThisShipBePlacedHere(r,t,e)){let n=parseInt(e),o=parseInt(t);for(let e=0;e<r.length;e++)this.playerBoardDOM.querySelector(`td[data-x="${n}"][data-y="${o}"]`).classList.add("ship-position-allowed"),"horizontal"===r.direction?n++:o++}else{let n=parseInt(e),o=parseInt(t);for(let e=0;e<r.length;e++)this.playerBoardDOM.querySelector(`td[data-x="${n}"][data-y="${o}"]`).classList.add("ship-position-prohibited"),"horizontal"===r.direction?n++:o++}}}))}addMouseOutEffectOn(n){n.addEventListener("mouseout",(()=>{if(this.playerShipNamesAndLength.length>0){const e=n.getAttribute("data-x"),t=n.getAttribute("data-y"),o=this.playerShipNamesAndLength[0];console.log(o);const r=new i(...o);if(r.direction=this.shipDirectionButton.textContent,this.playerBoard.canThisShipBePlacedHere(r,t,e)){let n=parseInt(e),o=parseInt(t);for(let e=0;e<r.length;e++)this.playerBoardDOM.querySelector(`td[data-x="${n}"][data-y="${o}"]`).classList.remove("ship-position-allowed"),"horizontal"===r.direction?n++:o++}else{let n=parseInt(e),o=parseInt(t);for(let e=0;e<r.length;e++)this.playerBoardDOM.querySelector(`td[data-x="${n}"][data-y="${o}"]`).classList.remove("ship-position-prohibited"),"horizontal"===r.direction?n++:o++}}}))}addClickEffectOn(n){n.addEventListener("click",(()=>{if(this.playerShipNamesAndLength.length>0){const e=n.getAttribute("data-x"),t=n.getAttribute("data-y");if(this.playerBoard.canThisShipBePlacedHere(new i(...this.playerShipNamesAndLength[0],this.shipDirectionButton.textContent),t,e)){const n=this.playerShipNamesAndLength.shift();console.log(n);const o=new i(...n);if(o.direction=this.shipDirectionButton.textContent,this.playerBoard.canThisShipBePlacedHere(o,t,e)){this.playerBoard.placeShip(o,e,t);let n=parseInt(e),r=parseInt(t);for(let e=0;e<o.length;e++){const e=this.playerBoardDOM.querySelector(`td[data-x="${n}"][data-y="${r}"]`);e.classList.remove("ship-position-allowed"),e.classList.add("ship"),"horizontal"===o.direction?n++:r++}document.getElementById("ship-left-to-place").textContent=`${this.playerShipNamesAndLength.length} ships left to place`}}}}))}}).setUpBoards();const m=document.getElementById("ship-direction");y.showModal(),m.addEventListener("click",(()=>{"horizontal"==m.textContent?m.textContent="vertical":m.textContent="horizontal"})),computerBoard.allowPlayerToAttackComputer(computerBoardDOM)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,